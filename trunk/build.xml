<?xml version="1.0"?>

<project name="proj4398" basedir="." default="usage">
    <property file="build.properties"/>

    <property name="bin.dir" value="bin"/>
    <property name="src.dir" value="src"/>
    <property name="xml.dir" value="xml"/>
    <property name="lib.dir" value="lib"/>
    <property name="jsp.dir" value="jsp"/>
    <property name="html.dir" value="html"/>
    <property name="dist.dir" value="dist"/>
    <property name="test.dir" value="test"/>
    <property name="build.dir" value="build/classes"/>
    <property name="name" value="proj4398"/>

    <path id="master-classpath">
        <fileset dir="${lib.dir}">
            <include name="*.jar"/>
        </fileset>
        <!-- We need the servlet API classes: -->
        <!--  * for Tomcat 5/6 use servlet-api.jar -->
        <!--  * for other app servers - check the docs -->
        <fileset dir="${appserver.lib}">
            <include name="servlet*.jar"/>
        </fileset>
        <pathelement path="${build.dir}"/>
    </path>

    <target name="usage">
        <echo message=""/>
        <echo message="${name} build file"/>
        <echo message="-----------------------------------"/>
        <echo message=""/>
        <echo message="Available targets are:"/>
        <echo message=""/>
        <echo message="build       --> Build the application"/>
        <echo message="clean       --> Clean compiled files and WAR file"/>
        <echo message="buildtests  --> Build the tests"/>
        <echo message="tests       --> Test all the tests"/>
        <echo message="deploy      --> Deploy application as directory"/>
        <echo message="deploywar   --> Deploy application as a WAR file"/>
        <echo message="install     --> Install application in Tomcat"/>
        <echo message="reload      --> Reload application in Tomcat"/>
        <echo message="start       --> Start Tomcat application"/>
        <echo message="stop        --> Stop Tomcat application"/>
        <echo message="list        --> List Tomcat applications"/>
        <echo message=""/>
    </target>

    <target name="build" description="Compile main source tree java files">
        <mkdir dir="${build.dir}"/>
        <javac destdir="${build.dir}" source="1.5" target="1.5" debug="true"
               deprecation="false" optimize="false" failonerror="true">
            <src path="${src.dir}"/>
            <classpath refid="master-classpath"/>
        </javac>
    </target>
    
    <target name="clean" description="Clean compiled files and WAR files">
        <delete>
          <fileset dir="${build.dir}" includes="**/*.class" />
        </delete>
        <delete>
          <fileset dir="${dist.dir}" includes="**/*.war" />
        </delete>
    </target>

    <target name="buildtests" description="Compile test tree java files">
          <mkdir dir="${build.dir}"/>
          <javac destdir="${build.dir}" source="1.5" target="1.5" debug="true"
              deprecation="false" optimize="false" failonerror="true">
              <src path="${test.dir}"/>
              <classpath refid="master-classpath"/>
          </javac>
    </target>

    <target name="tests" depends="build, buildtests" description="Run tests">
        <junit printsummary="on"
              fork="false"
              haltonfailure="false"
              failureproperty="tests.failed"
              showoutput="true">

              <classpath refid="master-classpath"/>
              <formatter type="brief" usefile="false"/>

              <batchtest>
                    <fileset dir="${build.dir}">
                          <include name="**/*Tests.*"/>
                    </fileset>
              </batchtest>
              
        </junit>

        <fail if="tests.failed">
              tests.failed=${tests.failed}
              ***********************************************************
              ***********************************************************
              ****  One or more tests failed!  Check the output ...  ****
              ***********************************************************
              ***********************************************************
        </fail>
    </target>

    <target name="deploy" depends="build" description="Deploy application">
        <copy todir="${deploy.path}/${name}" preservelastmodified="true">
            <fileset dir="${html.dir}">
                <include name="**/*.*"/>
            </fileset>
        </copy>
        <copy todir="${deploy.path}/${name}/WEB-INF/jsp" preservelastmodified="true">
            <fileset dir="${jsp.dir}">
                <include name="**/*.*"/>
            </fileset>
        </copy>
        <copy todir="${deploy.path}/${name}/WEB-INF/lib" preservelastmodified="true">
            <fileset dir="${lib.dir}">
                <include name="**/*.*"/>
            </fileset>
        </copy>
        <copy todir="${deploy.path}/${name}/WEB-INF/classes" preservelastmodified="true">
            <fileset dir="${build.dir}">
                <include name="**/*.*"/>
            </fileset>
        </copy>
        <copy todir="${deploy.path}/${name}/WEB-INF" preservelastmodified="true">
            <fileset dir="${xml.dir}">
                <include name="*.xml"/>
            </fileset>
        </copy>
    </target>

    <target name="deploywar" depends="deploy" description="Deploy application as a WAR file">
        <mkdir dir="${dist.dir}"/>
        <war destfile="${dist.dir}/${name}.war"
             webxml="${xml.dir}/web.xml">
             <fileset dir="${deploy.path}/${name}">
                <include name="**/*.*"/>
            </fileset>
        </war>
        <copy todir="${deploy.path}" preservelastmodified="true">
            <fileset dir="${dist.dir}">
                <include name="*.war"/>
            </fileset>
        </copy>
    </target>

<!-- ============================================================== -->
<!-- Tomcat tasks - remove these if you don't have Tomcat installed -->
<!-- ============================================================== -->

    <path id="catalina-ant-classpath">
        <!-- We need the Catalina jars for Tomcat -->
        <!--  * for other app servers - check the docs -->
        <fileset dir="${appserver.lib}">
            <include name="catalina-ant.jar"/>
        </fileset>
    </path>

    <taskdef name="install" classname="org.apache.catalina.ant.InstallTask">
        <classpath refid="catalina-ant-classpath"/>
    </taskdef>
    <taskdef name="reload" classname="org.apache.catalina.ant.ReloadTask">
        <classpath refid="catalina-ant-classpath"/>
    </taskdef>
    <taskdef name="list" classname="org.apache.catalina.ant.ListTask">
        <classpath refid="catalina-ant-classpath"/>
    </taskdef>
    <taskdef name="start" classname="org.apache.catalina.ant.StartTask">
        <classpath refid="catalina-ant-classpath"/>
    </taskdef>
    <taskdef name="stop" classname="org.apache.catalina.ant.StopTask">
        <classpath refid="catalina-ant-classpath"/>
    </taskdef>

    <target name="install" description="Install application in Tomcat">
        <install url="${tomcat.manager.url}"
                 username="${tomcat.manager.username}"
                 password="${tomcat.manager.password}"
                 path="/${name}"
                 war="${name}"/>
    </target>

    <target name="reload" description="Reload application in Tomcat">
        <reload url="${tomcat.manager.url}"
                 username="${tomcat.manager.username}"
                 password="${tomcat.manager.password}"
                 path="/${name}"/>
    </target>

    <target name="start" description="Start Tomcat application">
        <start url="${tomcat.manager.url}"
                 username="${tomcat.manager.username}"
                 password="${tomcat.manager.password}"
                 path="/${name}"/>
    </target>

    <target name="stop" description="Stop Tomcat application">
        <stop url="${tomcat.manager.url}"
                 username="${tomcat.manager.username}"
                 password="${tomcat.manager.password}"
                 path="/${name}"/>
    </target>

    <target name="list" description="List Tomcat applications">
        <list url="${tomcat.manager.url}"
                 username="${tomcat.manager.username}"
                 password="${tomcat.manager.password}"/>
    </target>

<!-- End Tomcat tasks -->

</project>
